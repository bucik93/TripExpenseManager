@page "/musicplayer"

@layout InnerPagesLayout
@inject TripsService TripsService
@inject NavigationManager NavigationManager
@inject MauiInterop MauiInterop
@inject DropDownsService DropDownsService
@inject AppState AppState

<div class="main-container">
    <div class="container">
        <div class="details-container select-none">
            <img src="/assets/logo.jpg" />
            <p id="songName">Cool Music Player</p>
        </div>
        <div class="wave-container select-none">
            <span class="wave" style="--i: 0s"></span>
            <span class="wave" style="--i: 0.2s"></span>
            <span class="wave" style="--i: 0.4s"></span>
            <span class="wave" style="--i: 0.6s"></span>
            <span class="wave" style="--i: 0.4s"></span>
            <span class="wave" style="--i: 0.2s"></span>
            <span class="wave" style="--i: 0s"></span>
            <span class="wave" style="--i: 0s"></span>
            <span class="wave" style="--i: 0.2s"></span>
            <span class="wave" style="--i: 0.4s"></span>
            <span class="wave" style="--i: 0.6s"></span>
            <span class="wave" style="--i: 0.4s"></span>
            <span class="wave" style="--i: 0.2s"></span>
            <span class="wave" style="--i: 0s"></span>
        </div>
        <div class="button-pallet">
            <div class="controllers">
                <div class="song-controller">
                    <p id="currentTime" class="time select-none">00:00</p>
                    <input type="range" name="seekBar" id="seekBar" value="0" oninput="changeSongController(event)">
                    <p id="duration" class="time select-none">00:00</p>
                </div>
                <div class="buttons">
                    <button type="button" class="btn btn1 refresh" onclick="refreshBtnClick()">
                        <i class="fa solid fa-rotate-right"></i>
                    </button>
                    <button type="button" class="btn btn2 backward" onclick="prevBtnClick()">
                        <i class="fa solid fa-backward-step"></i>
                    </button>
                    <button type="button" class="btn play-btn1" onclick="playBtnClick()">
                        <i class="fa solid fa-play"></i>
                    </button>
                    <button type="button" class="btn btn2 forward" onclick="nextBtnClick()">
                        <i class="fa solid fa-forward-step"></i>
                    </button>
                    <button type="button" class="btn btn1 repeat" onclick="repeatBtnClick()">
                        <i class="fa solid fa-repeat"></i>
                    </button>
                </div>
                <div class="volume-controller">
                    <div id="volumeIcon">
                        <i class="fa-solid fa-volume-high"></i>
                    </div>
                    <input type="range" name="volumeBar" id="volumeBar" min="0" max="1" step="0.01" value="1" oninput="changeVolumeController(event)">
                    <div>
                        <p id="volumeValue" class="volumeValue select-none">100%</p>
                    </div>
                </div>
            </div>
            <button type="button" class="btn btn3" onclick="showSongsList()">
                <i class="fa-solid fa-chevron-up"></i>
            </button>
        </div>
        <div id="songList" class="song-list">
            <button type="button" class="btn btn3" onclick="hideSongsList()">
                <i class="fa-solid fa-chevron-down"></i>
            </button>
            <div class="songs">
                <ul id="list" class="list">
                    @*       <li class="item">
                    <div class="details">
                    <img src="/assets/logo.jpg" />
                    <h5>Lorem, ipsum door.</h5>
                    </div>
                    <button type="button" class="btn play-btn2">
                    <i class="fa solid fa-play"></i>
                    </button>
                    </li>
                    <li class="item">
                    <div class="details">
                    <img src="/assets/logo.jpg" />
                    <h5>Lorem, ipsum door.</h5>
                    </div>
                    <button type="button" class="btn play-btn2">
                    <i class="fa solid fa-play"></i>
                    </button>
                    </li>
                    <li class="item">
                    <div class="details">
                    <img src="/assets/logo.jpg" />
                    <h5>Lorem, ipsum door.</h5>
                    </div>
                    <button type="button" class="btn play-btn2">
                    <i class="fa solid fa-play"></i>
                    </button>
                    </li> *@
                </ul>
            </div>
            <button type="button" class="btn import-btn">
                <input type="file" name="fileSelector" id="fileSelector" multiple accept="audio/*" hidden />
                Import Music
            </button>
        </div>
    </div>
</div>

<script type="text/javascript">
    const songsList = document.getElementById("songsList");
    const fileSelector = document.getElementById("fileSelector");
    let currentAudioIndex = 0;
    let preAudioIndex = 0;
    let songs = new Array();
    let audio = new Audio();
    let repeat = false;


    function showSongsList() {
        songList.classList.add("active");
        window.importFiles();
    }

    function hideSongsList() {
        songList.classList.remove("active");
        window.importFiles();
    }

    function clickFileSelector() {
        fileSelector.click();

    }

    function importFiles() {

        const list = document.getElementById("list");

        let files = new Array();

        files = [
            {
                name: "All Time Low",
                artist: "Jon Bellion, Stormzy",
                cover: "https://raw.githubusercontent.com/hafizmp/Music-Application/master/Assets/img/all_time_low.jpg",
                source: "https://raw.githubusercontent.com/hafizmp/Music-Application/master/Assets/music/All_Time_Low.mp3",
                url: "https://youtu.be/AXnqkVTFUqY",
                favorited: false
            },
            {
                name: "Weak when ur around",
                artist: "Blackbear",
                cover: "https://raw.githubusercontent.com/hafizmp/Music-Application/master/Assets/img/blackbear.jpeg",
                source: "https://raw.githubusercontent.com/hafizmp/Music-Application/master/Assets/music/Blackbear.mp3",
                url: "https://youtu.be/gk2fKTitijs",
                favorited: true
            },
            {
                name: "Bloom",
                artist: "Dabin, Dia Frampton",
                cover: "https://raw.githubusercontent.com/hafizmp/Music-Application/master/Assets/img/bloom_dabin.jpeg",
                source: "https://raw.githubusercontent.com/hafizmp/Music-Application/master/Assets/music/Bloom.mp3",
                url: "https://youtu.be/MVvclgDMtps",
                favorited: false
            },
            {
                name: "Channa Mereya - Unplugged",
                artist: "Pritam, Arijit Singh",
                cover: "https://raw.githubusercontent.com/hafizmp/Music-Application/master/Assets/img/channa_mereya-unplugged.jpg",
                source: "https://raw.githubusercontent.com/hafizmp/Music-Application/master/Assets/music/Channa_Mereya.mp3",
                url: "https://youtu.be/PYzFp5o4lhE",
                favorited: true
            },
            {
                name: "Falling",
                artist: "Trever Daniel",
                cover: "https://raw.githubusercontent.com/hafizmp/Music-Application/master/Assets/img/falling.png",
                source: "https://raw.githubusercontent.com/hafizmp/Music-Application/master/Assets/music/Falling.mp3",
                url: "https://youtu.be/L7mfjvdnPno",
                favorited: false
            },
            {
                name: "Kun Faya Kun",
                artist: "A.R. Rahman",
                cover: "https://raw.githubusercontent.com/hafizmp/Music-Application/master/Assets/img/kun_faya_kun.jpeg",
                source: "https://raw.githubusercontent.com/hafizmp/Music-Application/master/Assets/music/Kun_Faya_Kun.mp3",
                url: "https://youtu.be/T94PHkuydcw",
                favorited: true
            },
            {
                name: "Love Is Gone - Acoustic",
                artist: "SLANDER",
                cover: "https://raw.githubusercontent.com/hafizmp/Music-Application/master/Assets/img/love_is_gone-acoustic.jpeg",
                source: "https://raw.githubusercontent.com/hafizmp/Music-Application/master/Assets/music/Love_Is_Gone.mp3",
                url: "https://youtu.be/hCrtcVDgCGw",
                favorited: true
            },
            {
                name: "Pehli Dafa",
                artist: "Atif Aslam",
                cover: "https://raw.githubusercontent.com/hafizmp/Music-Application/master/Assets/img/pehli_dafa.jpeg",
                source: "https://raw.githubusercontent.com/hafizmp/Music-Application/master/Assets/music/Pehli_Dafa.mp3",
                url: "https://youtu.be/SxTYjptEzZs",
                favorited: false
            },
            {
                name: "Saansein",
                artist: "Prateek Kuhad",
                cover: "https://raw.githubusercontent.com/hafizmp/Music-Application/master/Assets/img/saansein.jpg",
                source: "https://raw.githubusercontent.com/hafizmp/Music-Application/master/Assets//music/Saansein.mp3",
                url: "https://youtu.be/R3Ed4zvQ0Hs",
                favorited: false
            },
        ];

        if (files.length > 0) {
            songs = files;

            list.innerHTML = "";
            while (list.firstChild) {
                list.removeChild(list.firstChild);
            }
        }

        files.forEach((file, index) => {
            const item = document.createElement("li");
            item.classList.add("item");

            item.innerHTML = `<div class="details">
                <img src="../assets/logo.jpg" alt="" />
                <h5>${file.name.substring(0, 20)}</h5>
                </div>
                <button
                type="button"
                data-index="${index}"
                class="btn play-btn2"
                >
                <i class="fa-solid fa-play"></i>
                </button>`;

            list.appendChild(item);

            setAudio();

            const playBtn = item.querySelector(".play-btn2");

            playBtn.onclick = () => {
                if (currentAudioIndex === index) {
                    checkCurrentAudio();
                    return;
                } else {
                    preAudioIndex = currentAudioIndex;
                    currentAudioIndex = index;
                }

                setAudio();

                return playBtnClick();
            };
        });
    }

    function playBtnClick() {
        checkCurrentAudio();
    }

    function setAudio() {
        audio.src = songs[currentAudioIndex].source;
        audio.load();
        songName.innerHTML = songs[currentAudioIndex].name;
    }

    function checkCurrentAudio() {
        if (songs.length !== 0) {
            if (audio.paused) {
                audio.play();
            } else {
                audio.pause();
            }
        }
    }

    function refreshBtnClick() {
        audio.currentTime = 0;
    }

    function prevBtnClick() {
        if (currentAudioIndex !== 0 && songs.length !== 0) {
            preAudioIndex = currentAudioIndex;
            --currentAudioIndex;

            setAudio();
            checkCurrentAudio();
        }
    }

    function nextBtnClick() {
        if (songs.length !== 0 && currentAudioIndex !== songs.length - 1) {
            preAudioIndex = currentAudioIndex;
            ++currentAudioIndex;

            setAudio();
            checkCurrentAudio();
        }
    }

    function repeatBtnClick() {
        if (repeat) {
            repeat = false;
            repeatBtn.classList.remove("active");
        } else {
            repeat = true;
            repeatBtn.classList.add("active");
        }
    }

    function changeSongController(e) {
        if (songs.length > 0) {
            audio.currentTime = e.target.value / (100 / audio.duration);
        }
    }

    function formatTime(time) {
        let min = Math.floor(time / 60);
        if (min < 10) {
            min = `0${min}`;
        }
        let sec = Math.floor(time - min * 60);
        if (sec < 10) {
            sec = `0${sec}`;
        }

        return `${min}:${sec}`;
    }

    function changeVolumeController(e) {
        audio.volume = e.target.value;

        const volume = Math.floor(e.target.value * 100);
        volumeValue.innerHTML = `${volume}%`;

        if (volume === 0) {
            volumeIcon.innerHTML = '<i class="fa-solid fa-volume-xmark"></i>';
        } else if (volume > 0 && volume <= 50) {
            volumeIcon.innerHTML = '<i class="fa-solid fa-volume-low"></i>';
        } else {
            volumeIcon.innerHTML = '<i class="fa-solid fa-volume-high"></i>';
        }
    }

    audio.addEventListener("timeupdate", function () {
        if (audio.currentTime === 0) {
            seekBar.value = 0;
        } else {
            currentTime.innerHTML = formatTime(audio.currentTime);
            durationTime.innerHTML = formatTime(audio.duration);

            seekBar.value = audio.currentTime * (100 / audio.duration);
        }
    });

    audio.addEventListener("playing", function () {
        waves.forEach((wave) => {
            wave.classList.add("active");
        });
        playBtn1.innerHTML = '<i class="fa-solid fa-pause"></i>';
        const prePlayBtn = document.querySelector(`[data-index="${preAudioIndex}"]`);
        const currentPlayBtn = document.querySelector(
            `[data-index="${currentAudioIndex}"]`
        );
        if (prePlayBtn) {
            prePlayBtn.innerHTML = '<i class="fa-solid fa-play"></i>';
        }
        if (currentPlayBtn) {
            currentPlayBtn.innerHTML = '<i class="fa-solid fa-pause"></i>';
        }
    });

    audio.addEventListener("pause", function () {
        waves.forEach((wave) => {
            wave.classList.remove("active");
        });
        playBtn1.innerHTML = '<i class="fa-solid fa-play"></i>';
        const currentPlayBtn = document.querySelector(
            `[data-index="${currentAudioIndex}"]`
        );
        if (currentPlayBtn) {
            currentPlayBtn.innerHTML = '<i class="fa-solid fa-play"></i>';
        }
    });

    audio.addEventListener("ended", function () {
        if (!repeat) {
            if (currentAudioIndex !== songs.length - 1) {
                preAudioIndex = currentAudioIndex;
                ++currentAudioIndex;
                setAudio();
                audio.play();
            } else {
                audio.pause();
            }
        } else {
            audio.play();
        }
    });
</script>
@code {

    protected override async Task OnInitializedAsync()
    {
        MauiInterop.ShowLoader();

        AppState.SetInnerPageTitle("Music Player");
        AppState.AddTabBarItems(new TabBarItem("", null));

        MauiInterop.HideLoader();
    }
}


<style type="text/css" scoped>

    @@import url ('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');

    :root {
        --primary: #ff930f;
    }

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: "Poppins", sans-serif;
    }

    .main-container {
        height: 100vh;
        background: linear-gradient(to top left #b5c6e0, #ebf4f5);
        display: flex;
        align-items: center;
        justify-content: center;
    }

    input[type="range"] {
        -webkit-appearance: none;
        height: 3px;
        width: 100%;
        background-color: var(--primary);
        border-radius: 10px;
        box-shadow: 0 0 5px var(--primary);
        cursor: pointer;
    }

        input[type="range"]::-webkit-slider-thumb {
            -webkit-appearance: none;
            height: 10px;
            width: 10px;
            background-color: var(--primary);
            border-radius: 50%;
            box-shadow: 0 0 10px var(--primary);
        }

    .main-container {
        position: relative;
        /*     width: 380px;
                                                                            height: 660px; */
        /* height: 660px; */
        background: linear-gradient( to top left, rgba(0,0,0,0.7), rgba(0,0,0,0.4)), url('assets/bg.jpg');
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        /*  border-radius: 36px; */
        /*         box-shadow: 0 5px 5px rgba(0,0,0,0.9);
                                             */ display: flex;
        flex-direction: column;
        overflow: hidden;
    }

    .details-container {
        flex-grow: 1;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        row-gap: 16px;
    }

        .details-container img {
            width: 180px;
            height: 180px;
            object-fit: cover;
            border: 2px solid var(--primary);
            border-radius: 24px;
            box-shadow: 0 0 20px var(--primary);
        }

        .details-container p {
            color: var(--primary);
            font-size: 16px;
            text-align: center;
            max-width: 70%;
        }

    .select-none {
        user-select: none;
        -webkit-user-select: none;
        pointer-events: none;
    }

    .wave-container {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 80px;
  column-gap: 8px;
}

.wave-container .wave {
  width: 5px;
  height: 5px;
  background: var(--primary);
  border-radius: 10px;
  box-shadow: 0 0 10px var(--primary);
}

 .wave-container .wave.active {
  animation: animate 1s infinite;
  animation-delay: var(--i);
}

    @@keyframes animateWave {
        0% {
            height: 5px;
        }

        50% {
            height: 40px;
        }

        100% {
            height: 5px;
        }
    }

    .button-pallet {
        display: flex;
        flex-direction: column;
        align-items: center;
        row-gap: 22px;
        height: max-content;
        padding: 16px 36px;
    }

    .controllers {
        width: 100%;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        row-gap: 24px;
    }

        .controllers .song-controller {
            width: 100%;
            display: flex;
            align-items: center;
            justify-content: space-between;
            column-gap: 8px;
        }

            .controllers .song-controller .time {
                width: 70px;
                text-align: center;
                color: var(--primary);
                font-size: 14px;
            }

            .controllers .song-controller input {
                flex-grow: 1;
            }

        .controllers .buttons {
            display: flex;
            align-items: center;
            justify-content: center;
            column-gap: 24px;
        }

    .btn {
        border: none;
        outline: none;
        background: none;
        color: rgba(255,255,255, 1);
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transform-origin: center;
        transition: 0.2s;
    }

        .btn:hover {
            transform: scale(1.04);
        }

        .btn:active {
            transform: scale(1.02);
        }

        .btn.btn1 {
            font-size: 16px;
        }

        .btn.btn2 {
            font-size: 20px;
            color: var(--primary);
        }

        .btn.btn3 {
            color: var(--primary);
            font-size: 20px;
        }

        .btn.play-btn1 {
            width: 60px;
            height: 60px;
            color: var(--primary);
            border: 2px solid var(--primary);
            border-radius: 50%;
            font-size: 28px;
            box-shadow: 0 0 10px var(--primary);
        }

        .btn.refresh:hover {
            color: var(--primary);
        }

        .btn.repeat.active {
            color: var(--primary);
        }

    .controllers .volume-controller {
        width: 160px;
        display: flex;
        align-items: center;
        justify-content: center;
        column-gap: 8px;
    }

        .controllers .volume-controller div {
            width: 60px;
            height: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: var(--primary);
            font-size: 12px;
            text-shadow: 0 0 2px var(--primary);
        }

    .song-list {
        position: absolute;
        bottom: -430px;
        left: 0;
        width: 100%;
        height: 420px;
        display: flex;
        flex-direction: column;
        align-items: center;
        row-gap: 16px;
        padding: 16px;
        background: linear-gradient(to top left, rgba(0,0,0,0.15), rgba(255,255,255,0.1));
        backdrop-filter: blur(12px);
        -webkit-backdrop-filter: blur(12px);
        border-radius: 36px 36px 0 0;
        box-shadow: 0 -2px 2px rgba(255,255,255, 0.4);
        transition: all 0.5s ease-in-out;
        z-index: 20;
    }

        .song-list.active {
            bottom: 0;
        }

        .song-list .songs {
            width: 100%;
            flex-grow: 1;
            overflow-y: auto;
            -ms-overflow-style: none;
            scrollbar-width: none;
            scroll-behavior: smooth;
        }

            .song-list .songs::-webkit-scrollbar {
                display: none;
            }

            .song-list .songs .list {
                display: flex;
                flex-direction: column;
                row-gap: 8px;
                padding: 0 8px;
            }

                .song-list .songs .list .item {
                    list-style: none;
                    background: rgba(255,255,255,0.05);
                    backdrop-filter: blur(4px);
                    -webkit-backdrop-filter: blur(4px);
                    display: flex;
                    align-items: center;
                    justify-content: space-between;
                    padding: 8px 16px 8px 8px;
                    border-radius: 10px;
                    color: var(--primary);
                    transition: transform 0.2s;
                    cursor: pointer;
                }

                    .song-list .songs .list .item:hover {
                        transform: scale(1.02);
                    }

                    .song-list .songs .list .item .details {
                        display: flex;
                        align-items: center;
                        column-gap: 12px;
                        pointer-events: none;
                        user-select: none;
                        -webkit-user-select: none;
                    }

                        .song-list .songs .list .item .details img {
                            width: 36px;
                            height: 36px;
                            border-radius: 5px;
                            object-fit: cover;
                            object-position: center;
                        }

                        .song-list .songs .list .item .details h5 {
                            font-size: 14px;
                            font-weight: 600;                            
                        }

                    .song-list .songs .list .item .play-btn2 {
                        font-size: 24px;
                        color: var(--primary);
                    }

        .song-list .import-btn {
            font-size: 16px;
            color: var(--primary);
            text-shadow: 0 0 5px var(--primary);
        }
</style>